/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/objects/tvs/scene.glb -o src/components/threejs/TVs.tsx --types --shadows --instance --exportdefault --transform --simplify 
Files: public/objects/tvs/scene.glb [700.82KB] > /home/alean/stuff/apps/popcast-ai/frontend/src/components/threejs/scene-transformed.glb [59.22KB] (92%)
Author: ribot02 (https://sketchfab.com/ribot02)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/retro-cyberpunk-computer-screens-6fbdcecb1b1e4f41947b4c03b5eed8f9
Title: retro cyberpunk computer screens
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_7: THREE.Mesh
    Object_8: THREE.Mesh
    Object_9: THREE.Mesh
  }
  materials: {
    Holzverkleidung: THREE.MeshStandardMaterial
    GlowLampBlue: THREE.MeshStandardMaterial
    HolzverkleidungDark: THREE.MeshStandardMaterial
    blackScreen: THREE.MeshStandardMaterial
    metallArm: THREE.MeshStandardMaterial
    monitoHuelle: THREE.MeshStandardMaterial
    monitoHuelle2: THREE.MeshStandardMaterial
    monitoHuelle2dark: THREE.MeshStandardMaterial
  }
}

export default function TVs(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/objects/tvs/tvs-transformed.glb',
  ) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_2.geometry}
        material={materials.Holzverkleidung}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_3.geometry}
        material={materials.GlowLampBlue}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.HolzverkleidungDark}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_5.geometry}
        material={materials.blackScreen}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_6.geometry}
        material={materials.metallArm}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_7.geometry}
        material={materials.monitoHuelle}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials.monitoHuelle2}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_9.geometry}
        material={materials.monitoHuelle2dark}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/scene-transformed.glb')
