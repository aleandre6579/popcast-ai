name: Backend CI

on:
  push:
    branches:
      - "**"  # Trigger on push to any branch

env:
  PYTHON_VERSION: "3.12.4"
  REGISTRY: ghcr.io
  BASE_IMG_NAME: ${{ github.repository }}

defaults:
  run:
    working-directory: ./backend

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==7.0.0

      - name: Lint with isort
        uses: isort/isort-action@master
        with:
          isortVersion: "5.13.2"
          sortPaths: "./backend/*"

      - name: Install Black
        run: |
          python -m pip install black==23.12.1

      - name: Lint with Black (using pyproject.toml)
        run: |
          black --check .

      - name: Lint with flake8
        run: |
          cd ..
          # stop the build if there are Python syntax errors or undefined names
          flake8 backend --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 backend --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Test with Pytest
        run: |
          pytest --cov=backend --cov-report xml:./backend/coverage.xml

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: ./backend/coverage.xml
          retention-days: 14

  build-and-upload:
    needs: test-and-coverage
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: '${{ steps.image-tag.outputs.image_tag }}'

    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image tag from commit id
        id: image-tag
        run: echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile \
          --tag ghcr.io/${{ env.BASE_IMG_NAME }}/backend:${{ env.image_tag }} \
          --tag ghcr.io/${{ env.BASE_IMG_NAME }}/backend:latest

      - name: Publish the images
        run: |
          docker push ghcr.io/${{ env.BASE_IMG_NAME }}/backend:${{ env.image_tag }} && \
          docker push ghcr.io/${{ env.BASE_IMG_NAME }}/backend:latest
